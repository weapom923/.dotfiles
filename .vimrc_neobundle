filetype plugin indent off

  if has('vim_starting')
    " Required:
    set runtimepath+=~/.vim/bundle/neobundle.vim/
  endif 

  call neobundle#begin(expand('~/.vim/bundle'))

    " Let NeoBundle manage NeoBundle
    " Required:
    NeoBundleFetch 'Shougo/neobundle.vim'

    " Add or remove your Bundles here:
    NeoBundle 'Shougo/unite.vim'
    NeoBundle 'Shougo/vimproc.vim', {
\ 'build' : {
\     'windows' : 'tools\\update-dll-mingw',
\     'cygwin' : 'make -f make_cygwin.mak',
\     'mac' : 'make',
\     'linux' : 'make',
\     'unix' : 'gmake',
\    },
\ }
    NeoBundle 'Shougo/neomru.vim'
    NeoBundle 'thinca/vim-quickrun'
    NeoBundle 'scrooloose/syntastic'
    NeoBundle 'scrooloose/nerdtree'
    NeoBundle 'Lokaltog/powerline', { 'rtp' : 'powerline/bindings/vim' }
    NeoBundle 'tpope/vim-fugitive'
    NeoBundle 'ctrlpvim/ctrlp.vim'
    NeoBundle 'flazz/vim-colorschemes'
    NeoBundle 'haya14busa/vim-migemo'
    NeoBundle 'rking/ag.vim'

    " You can specify revision/branch/tag.
    NeoBundle 'Shougo/vimshell', { 'rev' : '3787e5' }

  call neobundle#end()

  " If there are uninstalled bundles found on startup,
  " this will conveniently prompt you to install them.
  NeoBundleCheck
  if executable('ag')
    let g:unite_source_grep_command = 'ag'
    let g:unite_source_grep_default_opts = '--nocolor --nogroup'
    let g:unite_source_grep_recursive_opt = ''
    let g:unite_source_grep_max_candidates = 200
  endif

filetype plugin indent on
